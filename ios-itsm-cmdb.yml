---
- name: Populate ServiceNow CMDB with Routers
  hosts: ios
  connection: network_cli
  gather_facts: no
  vars_files:
    - ./credentials/servicenow-credentials.yml
    - ./default_vars.yml

  tasks:


  - name: Gather IOS facts
    cisco.ios.ios_facts:
      gather_subset: all
    register: ios_facts_result

  - name: show version
    cisco.ios.ios_command:
      commands:
        - show version
    register: version

  - name: Run command and parse with pyats
    ansible.utils.cli_parse:
      command: "show version"
      parser:
          name: ansible.netcommon.pyats
    register: parser_output

  - name: Show Version - all
    ansible.builtin.debug:
     var: parser_output

  - debug:
      var: ios_facts_result

  - name: Show Version Details
    ansible.builtin.debug:
     msg:
     - "Hostname: {{ parser_output.parsed.version.hostname }}"
     - "Model: {{ parser_output.parsed.version.chassis }}"
     - "Operating System: {{ parser_output.parsed.version.os }}"
     - "OS Version: {{ parser_output.parsed.version.version }}"
     - "Serial Number: {{ parser_output.parsed.version.chassis_sn }}"
     - "Configuration Register: {{ parser_output.parsed.version.curr_config_register }}"

  - name: Retrieve a specific configuration item by its sys_id
    servicenow.itsm.configuration_item_info:
      instance:
        host: "https://{{ SN_INSTANCE }}.service-now.com"
        username: "{{ SN_USERNAME }}"
        password: "{{ SN_PASSWORD }}"
      sys_class_name: cmdb_ci_ip_router
    register: result

  # - debug:
  #     var: result
  #
  # - debug:
  #     msg: "{{ result.records|json_query(query) }}"
  #   vars:
  #     serial_num: "{{ parser_output.parsed.version.chassis_sn }}"
  #     query: "[?serial_number=='{{ serial_num }}'].sys_id"

  - set_fact:
      sys_id_query: "{{ result.records|json_query(query) }}"
    vars:
      serial_num: "{{ parser_output.parsed.version.chassis_sn }}"
      query: "[?serial_number=='{{ serial_num }}'].sys_id"

  - name: Create a configuration item
    servicenow.itsm.configuration_item:
      instance:
        host: "https://{{ SN_INSTANCE }}.service-now.com"
        username: "{{ SN_USERNAME }}"
        password: "{{ SN_PASSWORD }}"
      name: "{{ parser_output.parsed.version.hostname }}"
      short_description: "{{ parser_output.parsed.version.chassis }}"
      serial_number: "{{ parser_output.parsed.version.chassis_sn }}"
      sys_class_name: cmdb_ci_ip_router
      environment: production
      category: Hardware
      other:
        manufacturer: Cisco
        firmware_version: "{{ ios_facts_result.ansible_facts.ansible_net_version }}"
        mac_address: "{{ ios_facts_result.ansible_facts.ansible_net_interfaces[0].macaddress }}"
        ip_address: "{{ ios_facts_result.ansible_facts.ansible_net_interfaces[0].ipv4[0].address }}"
    register: cmdb_router
    when: (sys_id_query|length == 0)

  - name: Update configuration item
    servicenow.itsm.configuration_item:
      instance:
        host: "https://{{ SN_INSTANCE }}.service-now.com"
        username: "{{ SN_USERNAME }}"
        password: "{{ SN_PASSWORD }}"
      name: "{{ parser_output.parsed.version.hostname }}"
      short_description: "{{ parser_output.parsed.version.chassis }}"
      serial_number: "{{ parser_output.parsed.version.chassis_sn }}"
      sys_class_name: cmdb_ci_ip_router
      sys_id: "{{sys_id_query[0]}}"
      environment: production
      category: Hardware
      other:
        manufacturer: Cisco
        firmware_version: "{{ ios_facts_result.ansible_facts.ansible_net_version }}"
        mac_address: "{{ ios_facts_result.ansible_facts.ansible_net_interfaces[0].macaddress }}"
        ip_address: "{{ ios_facts_result.ansible_facts.ansible_net_interfaces[0].ipv4[0].address }}"
    register: cmdb_router
    when: (sys_id_query|length > 0)

  # - name: Set Fact Genie Filter
  #   ansible.builtin.set_fact:
  #     pyats_version: "{{ version['stdout'][0] | clay584.genie.parse_genie(command='show version', os='ios') }}"
  #
  # - name: Debug Pyats facts - all
  #   ansible.builtin.debug:
  #    var: pyats_version.version
  #
  # - name: Debug Pyats facts - version
  #   ansible.builtin.debug:
  #    var: pyats_version.version.version
  #
  # - name: Debug Pyats facts - uptime
  #   ansible.builtin.debug:
  #    var: pyats_version.version.uptime
